
int is_white(const char c){
    if(c == ' ' || c == '\t' || c == '\n'){
        return 1;
    }
    else {
        return 0;
    }
}

void change_whites(char string[]){
    char length = strlen(string);
    for(int i = 0; i < length; i++){
        if(string[i] == ' ' || string[i] == '\n'){
            string[i] = '.';
        }
    }
}

int guess_eval(const int guess, const int my_number){
    if(guess == my_number){
        return 1;
    }
    else if(guess < my_number){
        return 2;
    }
    else if(guess > my_number){
        return 0;
    }
}

int leap_year(const int year){
    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
        return 1;
    }
    else if(year <= 1 || year >= 4443){
        return -1;
    }
    else {
        return 0;
    }
}

int count_positives(const int size, const int array[]){
    if(array == NULL){
        return -1;
    }
    int more = 0;
    for(int i = 0; i < size; i++){
        if(array[i] > 0){
            more++;
        }
    }
    return more;
}

int count_whites(const char string[]){
    if(string == NULL){
        return -1;
    }
    char fluffy = strlen(string);
    int count = 0;
    for(int i = 0; i < fluffy; i++){
        if(string[i] == ' ' || string[i] == '\t' || string[i] == '\n'){
            count++;
        }
    }
    return count;
}

int direction_correct(const int degree){
    if (degree < 0 || degree % 90 != 0) {
        return -1;
    }
    int corrected_degree = degree % 360;
    if (corrected_degree < 0) {
        corrected_degree += 360;
    }
    return corrected_degree;
}

int all_positives(const int size, const int array[]){
    if(size == NULL){
        return -1;
    }
    for (int i = 0; i < size; i++) {
        if (array[i] < 1) {
            return 0;
        }
    }
    return 1;
}

int last_positive(const int size, const int array[]){
     for(int i = 0; i < size; i++){
        if(array[i] > 0){
            return array[i];
        }

     }
    return -1;
}

int binary_num(const int num){
    if(num == 0 || num == 1){
        return 1;
    }
    if(num < -1000 || num > 1000){
        return -1;
    }
    return 0;
}

void swap_sign(const int size, int array[]){
      for (int i = 0; i < size; i++) {
         array[i] *= -1;
      }
}

int div_by_3(const int num){
    if(num % 3){
        return 0;
    }
    else{
        return 1;
    }
}

int same_case(const char a, const char b){
    if(isupper(a) && isupper(b)){
        return 1;
    }
    else if(isupper(a) && islower(b) || islower(a) && isupper(b)){
        return 0;
    }
    else if(islower(a) && islower(b)){
        return 1;
    }
    else {
        return -1;
    }
}

int find_first_A(const char string[]){
    int length = strlen(string);
    if(length == NULL){
        return -1;
    }
    for(int i = 0; i < length; i++){
        if(string[i] == 'A' || string[i] == 'a'){
           return i;
        }
    }
}

void string_to_upper(char string[]){
    int length = strlen(string);
    if(length == NULL){
        return string;
    }
    for(int i = 0; i < length; i++){
        string[i] = toupper(string[i]);
    }
}
